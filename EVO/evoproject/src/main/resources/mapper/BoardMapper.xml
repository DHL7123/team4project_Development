<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.evo.evoproject.mapper.board.BoardMapper">

    <resultMap id="BoardMap" type="com.evo.evoproject.domain.board.Board">
        <id property="boardNo" column="board_no" />
        <result property="userNo" column="user_no" />
        <result property="orderNo" column="order_no" />
        <result property="imageId" column="image_id" />
        <result property="categoryId" column="category_id" />
        <result property="boardTitle" column="board_title" />
        <result property="boardContent" column="board_content" />
        <result property="boardTimestamp" column="board_timestamp" />
        <result property="isAnswered" column="is_answered" />
        <result property="imageUrl" column="image_url" />
        <association property="user" javaType="com.evo.evoproject.domain.user.User">
            <id property="userId" column="user_id"/>
            <result property="userName" column="user_name"/>
            <!-- Add other user properties as needed -->
        </association>
    </resultMap>

    <!-- Board 삽입 -->
    <insert id="insertBoard" parameterType="com.evo.evoproject.domain.board.Board" useGeneratedKeys="true" keyProperty="boardNo">
        INSERT INTO board (user_no, order_no, image_id, category_id, board_title, board_content, board_timestamp, is_answered, image_url)
        VALUES (#{userNo}, #{orderNo}, #{imageId}, #{categoryId}, #{boardTitle}, #{boardContent}, #{boardTimestamp}, #{isAnswered}, #{imageUrl})
    </insert>

    <!-- Board 업데이트 -->
    <update id="updateBoard" parameterType="com.evo.evoproject.domain.board.Board">
        UPDATE board
        SET user_no = #{userNo},
            order_no = #{orderNo},
            image_id = #{imageId},
            category_id = #{categoryId},
            board_title = #{boardTitle},
            board_content = #{boardContent},
            board_timestamp = #{boardTimestamp},
            is_answered = #{isAnswered},
            image_url = #{imageUrl}
        WHERE board_no = #{boardNo}
    </update>

    <!-- Board 조회 -->
    <select id="findBoardById" resultMap="BoardMap" parameterType="int">
        SELECT * FROM board WHERE board_no = #{boardNo}
    </select>

    <!-- 사용자 별 Board 조회 -->
    <select id="findBoardsByUserNo" resultMap="BoardMap" parameterType="map">
        SELECT * FROM board WHERE user_no = #{userNo} ORDER BY board_timestamp DESC LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 Board 조회 -->
    <select id="findAllBoardsWithUser" resultMap="BoardMap" parameterType="map">
        SELECT b.*, u.user_id, u.user_name
        FROM board b
                 LEFT JOIN user u ON b.user_no = u.user_no
        ORDER BY b.board_timestamp DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 Board 수 조회 -->
    <select id="countAllBoards" resultType="int">
        SELECT COUNT(*) FROM board
    </select>

    <!-- 사용자 별 Board 수 조회 -->
    <select id="countBoardsByUserNo" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM board WHERE user_no = #{userNo}
    </select>

    <!-- Board 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM board WHERE board_no = #{boardNo}
    </delete>

    <!-- 특정 게시글의 이미지 ID 목록 조회 -->
    <select id="findImageIdsByBoardNo" resultType="int">
        SELECT image_id FROM board_image WHERE board_no = #{boardNo}
    </select>

    <!-- BoardImage 삽입 -->
    <insert id="insertBoardImage" parameterType="com.evo.evoproject.domain.board.BoardImage">
        INSERT INTO board_image (board_no, image_id)
        VALUES (#{boardNo}, #{imageId})
    </insert>

    <select id="findBoardsByCategory" parameterType="map" resultType="com.evo.evoproject.domain.board.Board">
        SELECT *
        FROM board
        WHERE user_no = #{userNo}
          AND category_id = #{category}
        ORDER BY board_timestamp DESC
            LIMIT #{offset}, #{limit}
    </select>

    <select id="countBoardsByCategory" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM board
        WHERE user_no = #{userNo}
          AND category_id = #{category}
    </select>


    <select id="findAllBoardsByCategory" resultMap="BoardMap" parameterType="map">
        SELECT b.*, u.user_id, u.user_name
        FROM board b
                 LEFT JOIN user u ON b.user_no = u.user_no
        WHERE b.category_id = #{category}
        ORDER BY b.board_timestamp DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAllBoardsByCategory" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM board
        WHERE category_id = #{category}
    </select>



</mapper>
